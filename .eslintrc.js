module.exports = {
  root: true,
  env: {
      es6: true,
      node: true,
      jest: true,
  },
  extends: [
      'eslint:recommended',
      'plugin:react/recommended',
  ],
  globals: {},
  parserOptions: {
      ecmaFeatures: { tsx: true },
      ecmaVersion: 2018,
      sourceType: 'module',
  },
  parser: '@typescript-eslint/parser',
  plugins: ['@typescript-eslint', 'react'],
  rules: {
      'indent': ['error', 4, { 'SwitchCase': 1 }],
      'quotes': ['error', 'single'],
      'semi': ['error', 'always'],
      'comma-dangle': ['error', 'always-multiline'],
      'jsx-quotes': ['error', 'prefer-double'],
      '@typescript-eslint/no-unused-vars': 'error',
      'react/boolean-prop-naming': 'warn',
      'react/button-has-type': 'warn',
      'react/default-props-match-prop-types': 'error',
      'react/display-name': 'off',
      'react/no-access-state-in-setstate': 'error',
      'react/no-danger': 'error',
      'react/no-did-mount-set-state': 'error',
      'react/no-did-update-set-state': 'error',
      'react/no-typos': 'error',
      'react/no-unused-prop-types': 'error',
      'react/no-unused-state': 'error',
      'react/no-will-update-set-state': 'error',
      'react/prefer-es6-class': 'error',
      'react/require-default-props': 'error',
      'react/self-closing-comp': 'error',
      'react/sort-comp': ['error', { 'order': ['static-variables', 'instance-variables', 'constructor', 'static-methods', 'lifecycle', 'everything-else', 'render'] }],
      'react/void-dom-elements-no-children': 'error',
      'react/jsx-boolean-value': ['error', 'always'],
      'react/jsx-closing-bracket-location': 'error',
      'react/jsx-closing-tag-location': 'error',
      'react/jsx-curly-spacing': 'error',
      'react/jsx-equals-spacing': 'error',
      'react/jsx-filename-extension': ['error', { 'extensions': ['.tsx'] }],
      'react/jsx-first-prop-new-line': 'error',
      'react/jsx-indent': 'error',
      'react/jsx-indent-props': 'error',
      'react/jsx-no-bind': ['error', {
          'ignoreDOMComponents': true,
          'ignoreRefs': true,
          'allowArrowFunctions': true,
          'allowFunctions': false,
          'allowBind': true,
      }],
      'react/jsx-no-comment-textnodes': 'error',
      'react/jsx-curly-brace-presence': ['error', { props: 'never', children: 'never' }],
      'react/jsx-pascal-case': 'error',
      'react/jsx-props-no-multi-spaces': 'error',
      'react/jsx-tag-spacing': ['error', {
          'closingSlash': 'never',
          'beforeSelfClosing': 'always',
          'afterOpening': 'never',
          'beforeClosing': 'never',
      }],
      'react/jsx-wrap-multilines': ['error', {
          'declaration': 'parens-new-line',
          'assignment': 'parens-new-line',
          'return': 'parens-new-line',
          'arrow': 'parens-new-line',
          'condition': 'parens-new-line',
          'logical': 'parens-new-line',
          'prop': 'parens-new-line',
      }],
  },
};
